//打印二维数组的元素
#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
//参数是数组的形式
void printf1(int arr[3][5], int x, int y) {
	int i = 0;
	int j = 0;
	for (i = 0; i < x; i++) {
		for (j = 0; j < y; j++) {
			printf("%d ", arr[i][j]);
		}
		printf("\n");
	}
}
//参数是指针的形式
void printf2(int (* p)[5], int x, int y) {//所以这儿用数组指针  int (* p)[5]  接收arr
	int i = 0;
	for (i = 0; i < x; i++) {
		int j = 0;
		for (j = 0; j < y; j++) {
			printf("%d ", *(*(p + i) + j));
							//p + i是找到那一行的地址
							// *（p+i） 找到那一行
							//跳过i行，即为arr1，arr2,arr3。*(p+i)――指向下标为i的这一行，且相当于找到了该行的数组名
							//*(p + i) + j相当于找到下标为j的这个元素的地址
							//*(*(p + i) + j)相当于找到i行j列的元素

		}
		printf("\n");
	}
}
int main() {
	int arr[3][5] = { /*arr1:*/{1,2,3,4,5} ,/*arr2:*/{2,3,4,5,6},/*arr3:*/{3,4,5,6,7}};
	printf1(arr, 3, 5);
	printf2(arr, 3, 5);//arr传的是首元素地址，即数组arr1:{1,2,3,4,5}这个数组的地址
	return 0;
}

