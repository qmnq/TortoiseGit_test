#define _CRT_SECURE_NO_WARNINGS
#include"game.h"
void InitBoard(char board[ROWS][COLS], int rows, int cols, char set) {
    int i = 0;
    int j = 0;
    for (i = 0; i < rows; i++) {
        for (j = 0; j < cols; j++) {
            board[i][j] = set;
        }
    }
}
void DisPlayBoard(char board[ROWS][COLS], int row, int col) {
    int i = 0;
    int j = 0;
    //打印列
    for (i = 0; i <= col; i++) {
        printf("%d ", i);//打印列数
    }
    printf("\n");//打印完列数后换行
    for (i = 1; i <= row; i++) {
        printf("%d ", i);//打印行数
        for (j = 1; j <= col; j++) {
            printf("%c ", board[i][j]);
        }
        printf("\n");
    }
}
void SetMine(char board[ROWS][COLS], int row, int col) {//布置雷
    int count = EASY_COUNT;//表示十个雷
    while (count) {//count = 0;退出
        int x = (rand() % row) + 1;//1-9
        int y = (rand() % col) + 1;
        if (board[x][y] == '0') {
            board[x][y] = '1';//变成雷
            count--;
        }
    }
}
int get_mine_count(char mine[ROWS][COLS], int x, int y) {//返回雷的个数
    return mine[x - 1][y - 1] + mine[x - 1][y] + mine[x - 1][y + 1] +
        mine[x][y - 1] + mine[x][y + 1] +
        mine[x + 1][y - 1] + mine[x + 1][y] + mine[x + 1][y + 1] - 8 * '0';
}
//排雷
void FindMine(char mine[ROWS][COLS], char show[ROWS][COLS], int row, int col) {
    printf("请输入排查雷的坐标：>\n");
    while (1) {
        int x = 0;
        int y = 0;
        int win = 0;
        //9*9-10 = 71;//71个雷
        while (win < row * col - EASY_COUNT) {//判断是否将雷排查完，如果排完，则赢
            scanf("%d", &x);
            scanf("%d", &y);
            //判断用户输入坐标的合法性
            if (x >= 1 && x <= row && y >= 1 && y <= col) {
                //坐标合法
                //1.是雷
                //2.不是雷
                if (mine[x][y] == '1') {
                    printf("很遗憾，你被炸死了\n");
                    DisPlayBoard(mine, row, col);
                    break;
                }
                else {
                    //计算x,y坐标周围有几个雷
                    int count = get_mine_count(mine, x, y);//写一个函数获取雷的个数
                    show[x][y] = count + '0';
                    DisPlayBoard(show, row, col);
                    win++;
                }
            }
            else {
                printf("坐标非法，请重新输入：\n");
            }
        }
        if (win == row * col - EASY_COUNT) {
            printf("恭喜你排雷成功\n");
            DisPlayBoard(mine, row, col);
        }
    }
}