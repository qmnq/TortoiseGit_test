#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include<assert.h>
bool isyear(int y) { //函数判断是否为闰年，返回 0 1
	if ((y % 4 == 0 && y % 100 != 0) || y % 400 == 0)
		return 1;
	return 0;
}
int main() {
	int y, d, x = 0,nowy,nowm,nowd;//定义起始年日，和结束年月日
	static int m;				   //静态定义月

	printf("请输入：出生 年 月 日。如：2003 6 28\n");
	scanf("%d %d %d", &y, &m, &d);//输入起始年月日
	printf("请输入现在的年月日：如：2022 5 31\n");
	scanf("%d %d %d", &nowy, &nowm, &nowd);//输入结束年月日、

	assert(y > 0 && nowy > 0 && y <= nowy);//断言年是否满足格式要求
	assert(m > 0 && m < 13 && nowm>0 && nowm < 13);//断言月是否满足格式要求
	assert(d > 0 && d < 32 && nowd>0 && nowd < 32);//断言日是否满足格式要求

	for (m , y; m <= 12 && y <=nowy; ){//对循环进行判断月是否小于等于12，且年是否小于等于结束年
		while ((m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12) && d <= 32) {
			if (y >= nowy && m >= nowm && d >= nowd) {
				break;
			}
			if ((m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12) && d == 32) {
				m++;				
				d = 1;				
				continue;
			}
			d++;
			x++;
		}
		while ((m == 4 || m == 6 || m == 9 || m == 11) && d <= 31) { 
			if (y >= nowy && m >= nowm && d >= nowd) {
				break;
			}
			if ((m == 4 || m == 6 || m == 9 || m == 11) && d == 31) {
				m++;				
				d = 1;				 
				continue;
			}
			d++;
			x++;
		}
		while (m == 2 && isyear(y) && d <= 30) { 
			if (y >= nowy && m >= nowm && d >= nowd) {
				break;
			}
			if (m == 2 && isyear(y) && d == 30) {
				m++;				
				d = 1;				
				continue;
			}
			d++;
			x++;
		}
		while (m == 2 && !isyear(y) && d <= 29) { 
			if (y >= nowy && m >= nowm && d >= nowd) {
				break;
			}
			if (m == 2 && !isyear(y) && d == 29) {
				m++;			
				d = 1;				
				continue;
			}
			d++;
			x++;
		}
		while (m == 12 && d <= 32) {
			if (y >= nowy && m >= nowm && d >= nowd) {
				break;
			}
			if (m == 12 && d == 32) {
				y++;				 
				m = 1;				
				d = 1;			
				continue;
			}
			d++;
			x++;
		}
		if (y >= nowy && m >= nowm && d >= nowd) {
			break;
		}
	}
	printf("您已经%d天这么大了。\n",x);
	return 0;
}